{"ts":1373504792243,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1373504796173,"patch":[[{"diffs":[[1,"        $(function() {\r\n            var registered = false;\r\n            var socket = io.connect(\"<%= hostName %>\");\r\n            //we should save the clientName in the local storage such that a client can reconnect without having to assume a new identity.\r\n            //make sure we save based on multiple hostnames such that we don't \r\n            var client = {\r\n                name: \"\",\r\n                x: 0,\r\n                y: 0,\r\n                moveUp: false,\r\n                moveDown: false,\r\n                moveLeft: false,\r\n                moveRight: false\r\n            };\r\n            \r\n            var serializedClientInfoMap = { };\r\n            var localKnowledgeMap = { };\r\n            var body = $(\"body\");\r\n            \r\n            var lk = function(name, callback) {\r\n                if (name in localKnowledgeMap) {\r\n                    callback(localKnowledgeMap[name]);\r\n                }\r\n            };\r\n            \r\n            var sk = function(name, callback) {\r\n                if (name in serializedClientInfoMap) {\r\n                    callback(serializedClientInfoMap[name]);\r\n                }\r\n            };\r\n            \r\n            var initUpdate = function() {\r\n                registered = true;\r\n                serializedClientInfoMap[client.name] = client;\r\n            \r\n                localKnowledgeMap[name] = { \r\n                    position: new ImmutableV2(),\r\n                    target: new ImmutableV2()\r\n                };\r\n                \r\n                \r\n                socket.on(\"updated\", function(data) {\r\n                   JSON.parse(data).entityUpdates.forEach(function(entityUpdateInfo) {\r\n                       if (entityUpdateInfo.name === client.name) {\r\n                           //don't update our client's data!\r\n                           return;\r\n                       }\r\n                       \r\n                       entityUpdateInfo.wasPlaying = serializedClientInfoMap[entityUpdateInfo.name].isPlaying;\r\n                       serializedClientInfoMap[entityUpdateInfo.name] = entityUpdateInfo;\r\n                       \r\n                   });\r\n                });\r\n                    \r\n                socket.on(\"server_error\", function(data) {\r\n                    $('p').text(data.message);\r\n                    $('p').css('foreground', 'red');\r\n                });\r\n                \r\n                socket.on(\"new_client\", function(data) {\r\n                    JSON.parse(data).newClients.forEach(function(newClient) {\r\n                        if (client.name !== newClient.name) {                            \r\n                            serializedClientInfoMap[newClient.name] = newClient;\r\n                        }\r\n                    });\r\n                });\r\n                \r\n                socket.on(\"player_dropped\", function(clientName) {\r\n                    delete serializedClientInfoMap[clientName];\r\n                });\r\n                \r\n                //the update function will need to be change to accomidate phaser... or phaser will have to accomidate the network updates\r\n                var time;\r\n                \r\n                var serverUpdateFPS = 10;\r\n                //updates the server sending our local client data abroad\r\n                setInterval(function() {\r\n                    socket.emit('update', JSON.stringify(client));\r\n                }, 1000 / serverUpdateFPS);\r\n                \r\n                $(\"#chatInput\").keydown(function(event) {\r\n                    if (event.which === 13) {\r\n                        socket.emit(\"chat\", (\"<p class='whitetext'>[\" + (new Date()).format() + \"] \" + client.name + \": \" + $(this).val() + \"</p>\"));\r\n                        \r\n                        $(this).val(\"\");\r\n                    }\r\n                });\r\n                \r\n                var chat = function(chatText) {\r\n                    $(\"#chat\").append(chatText);\r\n                    $(\"#chat\").animate({ scrollTop: $(\"#chat\")[0].scrollHeight }, 500);\r\n                }\r\n                socket.on(\"chatted\", function(data){\r\n                    chat(data);\r\n                });\r\n                \r\n                //chat(\"<p class='whitetext'>Welcome! Type &quot;&lt;script&gt;Your javascript here! Only use apostrophes in injected javascript!&lt;/script&gt;&quot; to inject javascript!</p>\");\r\n                \r\n                \r\n            };\r\n            \r\n            socket.on(\"registered\", function(data) {\r\n                client.name = data;\r\n                serializedClientInfoMap[client.name] = client;\r\n                initUpdate();\r\n            });\r\n            \r\n            var chatFocused = false;\r\n            \r\n            $(\"#chatInput\").focus(function() { \r\n                chatFocused = true;\r\n            });\r\n            \r\n            $(\"#chatInput\").blur(function() {\r\n               chatFocused = false; \r\n            });\r\n            \r\n            socket.emit(\"register\", JSON.stringify(client));\r\n            \r\n            var delayedSequence = function(timeout, actions, predicate, callback) {\r\n                if (!actions.Any()) {\r\n                    return;\r\n                }\r\n                \r\n                actions.First()();\r\n                actions.push(actions.shift());\r\n                \r\n                if (predicate()) {\r\n                    setTimeout(function() { delayedSequence(timeout, actions, predicate, callback); }, timeout);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n            \r\n            {\r\n            //gotta keep the kirbies...\r\n            var kirbyPrefix = \"Connecting chat: \";\r\n            var hasCompleted = false;\r\n            delayedSequence(333, [function() { $(\"#kirby\").text(kirbyPrefix + \"<(-.-)>\"); },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.-)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(O.-)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.-)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(-.-)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(-.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(-.O)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(-.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(O.O)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(0.0)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(().())>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<((o)O(o))>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"{<((o)O(o))>}\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"{{<((o)O(o))>}}\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"{<((o)O(o))>}\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"{{<((o)O(o))>}}\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"{<((o)O(o))>}\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(().())>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(0.0)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(^.^>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(^..^>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(^..^>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o..o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.oo.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.o)(o.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o.O)><(O.o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>OcO)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>O_O)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>OcO)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>O_O)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>OcO)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>OcO)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>O_O)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>O_O)> <(O_O<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>o_o)> <(o_o<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>-_-)> <(-_-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>-_-)> <(-_-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> <(=_=<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> <o_o<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> <(-{}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> (-{}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> ({}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)> }-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)>}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=)}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_=}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=_}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>=}-<)\"); \r\n                     },\r\n                       function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(>}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"}-<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"(-o<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o-o<)\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o-o)>\"); \r\n                     },\r\n                     function() {\r\n                         $(\"#kirby\").text(kirbyPrefix + \"<(o-o)>\"); \r\n                     },\r\n                     function() { $(\"#kirby\").text(kirbyPrefix + \"<(-.-)>\"); },\r\n                     function() { $(\"#kirby\").text(kirbyPrefix + \"<(-.-)>\"); kirbyPrefix = \"\";}], \r\n                function() { return true; },\r\n                function() {\r\n                    $(\"#kirby\").text(\"Loaded!\");\r\n                    setTimeout(function() { $(\"#kirby\").remove(); }, 2000);\r\n                });\r\n            }\r\n                "]],"start1":0,"start2":0,"length1":0,"length2":13555}]],"length":13555,"saved":false}
{"ts":1373504830617,"patch":[[{"diffs":[[0,"\n            }\r\n"],[1,"        })\r\n"],[0,"                "]],"start1":13523,"start2":13523,"length1":32,"length2":44}]],"length":13567,"saved":false}
{"ts":1373504832137,"patch":[[{"diffs":[[0,"      })"],[1,";"],[0,"\r\n      "]],"start1":13541,"start2":13541,"length1":16,"length2":17}]],"length":13568,"saved":false}
{"ts":1373504854771,"patch":[[{"diffs":[[0,"   }\r\n        })"],[1,"()"],[0,";\r\n             "]],"start1":13533,"start2":13533,"length1":32,"length2":34}]],"length":13570,"saved":false}
